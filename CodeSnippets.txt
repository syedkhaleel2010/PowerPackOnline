What Is Swagger?

Swagger allows you to describe the structure of your APIs so that machines can read them.
The ability of APIs to describe their own structure is the root of all awesomeness in Swagger. 
Why is it so great? Well, by reading your API’s structure, we can automatically build beautiful 
and interactive API documentation. We can also automatically generate client libraries for your 
API in many languages and explore other possibilities like automated testing. Swagger does this
by asking your API to return a YAML or JSON that contains a detailed description of your entire API. 
This file is essentially a resource listing of your API which adheres to OpenAPI Specification. 

The specification asks you to include information like:

What are all the operations that your API supports?
What are your API’s parameters and what does it return?
Does your API need some authorization?
And even fun things like terms, contact information and license to use the API.

for more Info : https://swagger.io/docs/specification/2-0/what-is-swagger/
--------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------
What is Elmah ?

ELMAH (Error Logging Modules and Handlers) is an application-wide error logging facility that is completely pluggable. 
It can be dynamically added to a running ASP.NET web application, or even all ASP.NET web applications on a machine, 
without any need for re-compilation or re-deployment.

Once ELMAH has been dropped into a running web application and configured appropriately,
you get the following facilities without changing a single line of your code:

Logging of nearly all unhandled exceptions.
A web page to remotely view the entire log of recorded exceptions.
A web page to remotely view the full details of any one logged exception, including colored stack traces.
In many cases, you can review the original yellow screen of death that ASP.NET generated for a given exception,
even with customErrors mode turned on.

An e-mail notification of each error at the time it occurs.
An RSS feed of the last 15 errors from the log.

for more Info : https://elmah.github.io/ , https://www.c-sharpcorner.com/article/introduction-to-elmah-in-mvc/

--------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------
What is SOA?

● It is a reusable component on the network.

● It is the collection of services on a network that communicate with one another.

● For example, verifying a credit card transaction or processing a purchase order.

● Loosely coupled (meaning that an application doesn’t have to know the technical
details of another application in order to talk to it).

● Services are well-defined, platform-independent interfaces, and are reusable.

How To Achieve SOA?

Few famous ways of achieving SOA
.NET Remoting
 Web services
 WCF
 RESTful Services Web APIs


why REST?
● Service for any device with front-end
● Easy
● Simple
● Light weight
● All features of HTTP
● ReST-ful (Representational State Transfer) Services fulfill all
the above needs.
www.ManzoorTheTrainer.com

What is REST?

"Architectural Styles and the Design of Network-based Software Architectures" was
initially proposed by Roy Thomas Fielding in his 2000 Ph.D. dissertation.


www.ManzoorTheTrainer.com
 
What Is RESTful Web APIs?

● Web service APIs that adhere to the REST architectural constraints.
● HTTP-based RESTful APIs Clients should know:
○ Base URI, such as http://manzoorthetrainer.com/courses/
○ An Internet media type for the data. This is often JSON but can
be any other valid Internet media type (e.g., XML, images, etc.)
○ Standard HTTP methods (e.g., GET, PUT, POST, or DELETE)
● Few famous Web APIs are Google Maps, Twitter, YouTube, Flickr,
Facebook, Amazon Product, Advertising, etc.,

Credit : Manzoorthetrainer.com
---------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------
  $("#myButton").click(function () {
                $.ajax({
                    url: 'http://localhost:65256/api/studinfo',
                    type: 'GET',
                    success: function (result) {
                        console.log(result);
                    }
                });
            });
-------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------
What is Autofac ?

Autofac implments IoC Pattern also Dependency Injection Resolver.

Autofac is an IoC container for Microsoft .NET. It manages the dependencies between classes so that applications stay easy 
to change as they grow in size and complexity. This is achieved by treating regular .NET classes as components.

Emphasis theirs.

So Autofac provides you with easy inversion of control, with the idea that this will keep your 
dependencies manageable and your code clean as it grows.  Interesting, given its good percentile scores in my research.


The Dependency Injection pattern, also known as Inversion of Control, is one of the most popular design paradigms today. 
It enables us to write loosely coupled code, it eliminates tight coupling between objects to make both the objects 
and applications that use them more flexible, reusable, easier to test, and makes it possible to change 
them at runtime and compile time. 


for more Info : https://www.codeproject.com/Articles/690391/Dependency-Injection-Pattern-with-Autofac
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
What is Unity Container?

Unity container is an open source IoC container for .NET applications supported by Microsoft. 
It is a lightweight and extensible IoC container.

for more Info : https://www.codeproject.com/Articles/1163016/Using-Unity-Framework-in-ASP-NET-MVC

-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
Health checks in ASP.NET Core

ASP.NET Core offers Health Checks Middleware and libraries for reporting the health of app infrastructure components.

Health checks are exposed by an app as HTTP endpoints. Health check endpoints can be configured for a variety of 
real-time monitoring scenarios:

Health probes can be used by container orchestrators and load balancers to check an app's status. For example, a container orchestrator may respond to a failing health check by halting a rolling deployment or restarting a container. A load balancer might react to an unhealthy app by routing traffic away from the failing instance to a healthy instance.
Use of memory, disk, and other physical server resources can be monitored for healthy status.
Health checks can test an app's dependencies, such as databases and external service endpoints, to confirm availability and normal functioning.

Health checks are usually used with an external monitoring service or container orchestrator to check the status of an app.
Before adding health checks to an app, decide on which monitoring system to use. 
The monitoring system dictates what types of health checks to create and how to configure their endpoints.

for more Info : https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/health-checks?view=aspnetcore-3.1

---------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------

How to create a helper method in asp.net mvc ?

https://www.c-sharpcorner.com/UploadFile/3194c4/custom-html-helpers-in-mvc/#:~:text=There%20are%20two%20ways%20in,custom%20Html%20helpers%20as%20below.&text=We%20can%20create%20our%20own,then%20just%20like%20inbuilt%20helpers.&text=Add%20new%20class%20in%20MVC%20application%20and%20give%20it%20meaningful%20name.